// <auto-generated />
using System;
using FishFarm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FishFarm.Migrations
{
    [DbContext(typeof(FishFarmDBContext))]
    [Migration("20230419122247_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FishFarm.Models.Boats", b =>
                {
                    b.Property<int>("BoatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoatId"));

                    b.Property<string>("BoatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FishFarmsFarmId")
                        .HasColumnType("int");

                    b.Property<double>("GpsPosition")
                        .HasColumnType("float");

                    b.Property<int>("NoOfCages")
                        .HasColumnType("int");

                    b.HasKey("BoatId");

                    b.HasIndex("FishFarmsFarmId");

                    b.ToTable("boats");
                });

            modelBuilder.Entity("FishFarm.Models.FishFarms", b =>
                {
                    b.Property<int>("FarmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmId"));

                    b.Property<bool>("BargeAvailability")
                        .HasColumnType("bit");

                    b.Property<string>("FarmName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FarmPictureUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FarmId");

                    b.ToTable("fishFarms");
                });

            modelBuilder.Entity("FishFarm.Models.Workers", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CertifiedDatePeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("CrewRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FishFarmsFarmId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkerPosition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkerId");

                    b.HasIndex("FishFarmsFarmId");

                    b.ToTable("workers");
                });

            modelBuilder.Entity("FishFarm.Models.Boats", b =>
                {
                    b.HasOne("FishFarm.Models.FishFarms", null)
                        .WithMany("BoatId")
                        .HasForeignKey("FishFarmsFarmId");
                });

            modelBuilder.Entity("FishFarm.Models.Workers", b =>
                {
                    b.HasOne("FishFarm.Models.FishFarms", null)
                        .WithMany("WorkerId")
                        .HasForeignKey("FishFarmsFarmId");
                });

            modelBuilder.Entity("FishFarm.Models.FishFarms", b =>
                {
                    b.Navigation("BoatId");

                    b.Navigation("WorkerId");
                });
#pragma warning restore 612, 618
        }
    }
}
